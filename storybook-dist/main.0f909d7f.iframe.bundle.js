(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx|mdx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx|mdx))$":function(module,exports,__webpack_require__){var map={"./00Welcome.stories.js":"./src/00Welcome.stories.js","./01ReadOnlyTable.stories.js":"./src/01ReadOnlyTable.stories.js","./02EditableTable.stories.js":"./src/02EditableTable.stories.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx|mdx))$"},"./src/00Welcome.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Welcome",(function(){return Welcome}));var _Users_tylerhawkins_Code_SideProjects_tables_and_grids_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));__webpack_exports__.default={title:"Welcome"};var Welcome=function Welcome(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h1",{children:"ðŸ‘‹ Welcome to React Tables and Grids"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("p",{children:"This Storybook playground showcases various tables and grids built in React. Best of all, the content is accessible. ðŸŽ‰"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("p",{children:"All the content and design patterns in this project meet the WCAG 2.1 AA success criteria and adhere to the WAI-ARIA Authoring Practices guidelines for creating accessible widgets. ðŸŽŠ"})]})};Welcome.parameters=Object(_Users_tylerhawkins_Code_SideProjects_tables_and_grids_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"() => (\n  <>\n    <h1>ðŸ‘‹ Welcome to React Tables and Grids</h1>\n    <p>\n      This Storybook playground showcases various tables and grids built in\n      React. Best of all, the content is accessible. ðŸŽ‰\n    </p>\n    <p>\n      All the content and design patterns in this project meet the WCAG 2.1 AA\n      success criteria and adhere to the WAI-ARIA Authoring Practices guidelines\n      for creating accessible widgets. ðŸŽŠ\n    </p>\n  </>\n)"}},Welcome.parameters),Welcome.__docgenInfo={description:"",methods:[],displayName:"Welcome"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/00Welcome.stories.js"]={name:"Welcome",docgenInfo:Welcome.__docgenInfo,path:"src/00Welcome.stories.js"})},"./src/01ReadOnlyTable.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"_BasicTable",(function(){return _01ReadOnlyTable_stories_BasicTable})),__webpack_require__.d(__webpack_exports__,"_TableWithWidgetTypes",(function(){return _01ReadOnlyTable_stories_TableWithWidgetTypes})),__webpack_require__.d(__webpack_exports__,"_TableGrid",(function(){return _01ReadOnlyTable_stories_TableGrid}));var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),basicPokemonData=__webpack_require__("./src/fixtures/basicPokemonData.js"),pokemonDataWithWidgetTypes=__webpack_require__("./src/fixtures/pokemonDataWithWidgetTypes.js"),jsx_runtime=(__webpack_require__("./src/Table.css"),__webpack_require__("./node_modules/react/jsx-runtime.js")),BasicTable_BasicTable=function BasicTable(_ref){var tableData=_ref.tableData,tableHeaders=Object.keys(tableData[0]);return Object(jsx_runtime.jsxs)("table",{"aria-label":"Basic table",children:[Object(jsx_runtime.jsx)("thead",{children:Object(jsx_runtime.jsx)("tr",{children:tableHeaders.map((function(tableHeader){return Object(jsx_runtime.jsx)("th",{scope:"col",children:tableHeader},tableHeader)}))})}),Object(jsx_runtime.jsx)("tbody",{children:tableData.map((function(tableRow){return Object(jsx_runtime.jsx)("tr",{children:Object.values(tableRow).map((function(tableCellData){return Object(jsx_runtime.jsx)("td",{children:tableCellData},tableCellData)}))},tableRow.id)}))})]})};BasicTable_BasicTable.__docgenInfo={description:"",methods:[],displayName:"BasicTable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/basicTable/BasicTable.js"]={name:"BasicTable",docgenInfo:BasicTable_BasicTable.__docgenInfo,path:"src/basicTable/BasicTable.js"});var TableCellCheckbox_TableCellCheckbox=function TableCellCheckbox(_ref){var tableCellData=_ref.tableCellData;return Object(jsx_runtime.jsx)("input",{type:"checkbox",checked:tableCellData.value,"aria-label":tableCellData["aria-label"]})};TableCellCheckbox_TableCellCheckbox.__docgenInfo={description:"",methods:[],displayName:"TableCellCheckbox"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableWithWidgetTypes/widgetTypes/TableCellCheckbox.js"]={name:"TableCellCheckbox",docgenInfo:TableCellCheckbox_TableCellCheckbox.__docgenInfo,path:"src/tableWithWidgetTypes/widgetTypes/TableCellCheckbox.js"});var TableCellLink_TableCellLink=function TableCellLink(_ref){var tableCellData=_ref.tableCellData;return Object(jsx_runtime.jsx)("a",{href:tableCellData.href,children:tableCellData.value})};TableCellLink_TableCellLink.__docgenInfo={description:"",methods:[],displayName:"TableCellLink"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableWithWidgetTypes/widgetTypes/TableCellLink.js"]={name:"TableCellLink",docgenInfo:TableCellLink_TableCellLink.__docgenInfo,path:"src/tableWithWidgetTypes/widgetTypes/TableCellLink.js"});var TableCellText_TableCellText=function TableCellText(_ref){return _ref.tableCellData.value},TableCell_TableCell=function TableCell(_ref){var tableCellData=_ref.tableCellData;return Object(jsx_runtime.jsx)("td",{children:function getTableCellWidget(widgetType){switch(widgetType){case"checkbox":return Object(jsx_runtime.jsx)(TableCellCheckbox_TableCellCheckbox,{tableCellData:tableCellData});case"link":return Object(jsx_runtime.jsx)(TableCellLink_TableCellLink,{tableCellData:tableCellData});default:return Object(jsx_runtime.jsx)(TableCellText_TableCellText,{tableCellData:tableCellData})}}(tableCellData.widgetType)})};TableCell_TableCell.__docgenInfo={description:"",methods:[],displayName:"TableCell"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableWithWidgetTypes/widgetTypes/TableCell.js"]={name:"TableCell",docgenInfo:TableCell_TableCell.__docgenInfo,path:"src/tableWithWidgetTypes/widgetTypes/TableCell.js"});var TableWithWidgetTypes_TableWithWidgetTypes=function TableWithWidgetTypes(_ref){var tableData=_ref.tableData,tableHeaders=Object.keys(tableData[0]);return Object(jsx_runtime.jsxs)("table",{"aria-label":"Table with various widget types like checkboxes, text, and links",children:[Object(jsx_runtime.jsx)("thead",{children:Object(jsx_runtime.jsx)("tr",{children:tableHeaders.map((function(tableHeader){return Object(jsx_runtime.jsx)("th",{scope:"col",children:tableHeader},tableHeader)}))})}),Object(jsx_runtime.jsx)("tbody",{children:tableData.map((function(tableRow){return Object(jsx_runtime.jsx)("tr",{children:Object.values(tableRow).map((function(tableCellData){return Object(jsx_runtime.jsx)(TableCell_TableCell,{tableCellData:tableCellData},"".concat(tableCellData.widgetType,"-").concat(tableCellData.value))}))},tableRow.id.value)}))})]})};TableWithWidgetTypes_TableWithWidgetTypes.__docgenInfo={description:"",methods:[],displayName:"TableWithWidgetTypes"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableWithWidgetTypes/TableWithWidgetTypes.js"]={name:"TableWithWidgetTypes",docgenInfo:TableWithWidgetTypes_TableWithWidgetTypes.__docgenInfo,path:"src/tableWithWidgetTypes/TableWithWidgetTypes.js"});var slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),widgetTypes_TableCellCheckbox_TableCellCheckbox=function TableCellCheckbox(_ref){var tableCellData=_ref.tableCellData,isCurrentFocusedCell=_ref.isCurrentFocusedCell,setIsCurrentFocusedCell=_ref.setIsCurrentFocusedCell,tableCellRef=Object(react.useRef)(null);return Object(react.useEffect)((function(){var _tableCellRef$current;isCurrentFocusedCell&&(null===(_tableCellRef$current=tableCellRef.current)||void 0===_tableCellRef$current||_tableCellRef$current.focus())}),[isCurrentFocusedCell]),Object(jsx_runtime.jsx)("td",{onClick:setIsCurrentFocusedCell,children:Object(jsx_runtime.jsx)("input",{type:"checkbox",checked:tableCellData.value,"aria-label":tableCellData["aria-label"],tabIndex:-1,ref:tableCellRef})})};widgetTypes_TableCellCheckbox_TableCellCheckbox.__docgenInfo={description:"",methods:[],displayName:"TableCellCheckbox"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableGrid/widgetTypes/TableCellCheckbox.js"]={name:"TableCellCheckbox",docgenInfo:widgetTypes_TableCellCheckbox_TableCellCheckbox.__docgenInfo,path:"src/tableGrid/widgetTypes/TableCellCheckbox.js"});var widgetTypes_TableCellLink_TableCellLink=function TableCellLink(_ref){var tableCellData=_ref.tableCellData,isCurrentFocusedCell=_ref.isCurrentFocusedCell,setIsCurrentFocusedCell=_ref.setIsCurrentFocusedCell,tableCellRef=Object(react.useRef)(null);return Object(react.useEffect)((function(){var _tableCellRef$current;isCurrentFocusedCell&&(null===(_tableCellRef$current=tableCellRef.current)||void 0===_tableCellRef$current||_tableCellRef$current.focus())}),[isCurrentFocusedCell]),Object(jsx_runtime.jsx)("td",{onClick:setIsCurrentFocusedCell,children:Object(jsx_runtime.jsx)("a",{href:tableCellData.href,tabIndex:-1,ref:tableCellRef,children:tableCellData.value})})};widgetTypes_TableCellLink_TableCellLink.__docgenInfo={description:"",methods:[],displayName:"TableCellLink"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableGrid/widgetTypes/TableCellLink.js"]={name:"TableCellLink",docgenInfo:widgetTypes_TableCellLink_TableCellLink.__docgenInfo,path:"src/tableGrid/widgetTypes/TableCellLink.js"});var widgetTypes_TableCellText_TableCellText=function TableCellText(_ref){var tableCellData=_ref.tableCellData,isCurrentFocusedCell=_ref.isCurrentFocusedCell,setIsCurrentFocusedCell=_ref.setIsCurrentFocusedCell,tableCellRef=Object(react.useRef)(null);return Object(react.useEffect)((function(){var _tableCellRef$current;isCurrentFocusedCell&&(null===(_tableCellRef$current=tableCellRef.current)||void 0===_tableCellRef$current||_tableCellRef$current.focus())}),[isCurrentFocusedCell]),Object(jsx_runtime.jsx)("td",{tabIndex:-1,ref:tableCellRef,onClick:setIsCurrentFocusedCell,children:tableCellData.value})};widgetTypes_TableCellText_TableCellText.__docgenInfo={description:"",methods:[],displayName:"TableCellText"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableGrid/widgetTypes/TableCellText.js"]={name:"TableCellText",docgenInfo:widgetTypes_TableCellText_TableCellText.__docgenInfo,path:"src/tableGrid/widgetTypes/TableCellText.js"});var widgetTypes_TableCell_TableCell=function TableCell(_ref){var tableCellData=_ref.tableCellData,isCurrentFocusedCell=_ref.isCurrentFocusedCell,setIsCurrentFocusedCell=_ref.setIsCurrentFocusedCell;return function getTableCellWidget(widgetType){switch(widgetType){case"checkbox":return Object(jsx_runtime.jsx)(widgetTypes_TableCellCheckbox_TableCellCheckbox,{tableCellData:tableCellData,isCurrentFocusedCell:isCurrentFocusedCell,setIsCurrentFocusedCell:setIsCurrentFocusedCell});case"link":return Object(jsx_runtime.jsx)(widgetTypes_TableCellLink_TableCellLink,{tableCellData:tableCellData,isCurrentFocusedCell:isCurrentFocusedCell,setIsCurrentFocusedCell:setIsCurrentFocusedCell});default:return Object(jsx_runtime.jsx)(widgetTypes_TableCellText_TableCellText,{tableCellData:tableCellData,isCurrentFocusedCell:isCurrentFocusedCell,setIsCurrentFocusedCell:setIsCurrentFocusedCell})}}(tableCellData.widgetType)};widgetTypes_TableCell_TableCell.__docgenInfo={description:"",methods:[],displayName:"TableCell"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableGrid/widgetTypes/TableCell.js"]={name:"TableCell",docgenInfo:widgetTypes_TableCell_TableCell.__docgenInfo,path:"src/tableGrid/widgetTypes/TableCell.js"});var TableGrid_TableGrid=function TableGrid(_ref){var tableData=_ref.tableData,tableHeaders=Object.keys(tableData[0]),tableRowCount=tableData.length,tableColumnCount=tableHeaders.length,lastRowIndex=tableRowCount-1,lastColumnIndex=tableColumnCount-1,_useState=Object(react.useState)(null),_useState2=Object(slicedToArray.a)(_useState,2),currentCellXCoordinate=_useState2[0],setCurrentCellXCoordinate=_useState2[1],_useState3=Object(react.useState)(null),_useState4=Object(slicedToArray.a)(_useState3,2),currentCellYCoordinate=_useState4[0],setCurrentCellYCoordinate=_useState4[1],tableGridRef=Object(react.useRef)(null),handleArrowUp=function handleArrowUp(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?setCurrentCellYCoordinate(Math.max(currentCellYCoordinate-1,0)):handleArrowKeysForFirstFocusedCell()},handleArrowDown=function handleArrowDown(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?setCurrentCellYCoordinate(Math.min(currentCellYCoordinate+1,lastRowIndex)):handleArrowKeysForFirstFocusedCell()},handleArrowLeft=function handleArrowLeft(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?setCurrentCellXCoordinate(Math.max(currentCellXCoordinate-1,0)):handleArrowKeysForFirstFocusedCell()},handleArrowRight=function handleArrowRight(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?setCurrentCellXCoordinate(Math.min(currentCellXCoordinate+1,lastColumnIndex)):handleArrowKeysForFirstFocusedCell()},handleHome=function handleHome(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?(setCurrentCellXCoordinate(0),e.ctrlKey&&setCurrentCellYCoordinate(0)):handleArrowKeysForFirstFocusedCell()},handleEnd=function handleEnd(e){e.preventDefault(),areAnyCellsCurrentlyFocused()?(setCurrentCellXCoordinate(lastColumnIndex),e.ctrlKey&&setCurrentCellYCoordinate(lastRowIndex)):handleArrowKeysForFirstFocusedCell()},handleArrowKeysForFirstFocusedCell=function handleArrowKeysForFirstFocusedCell(){setCurrentCellXCoordinate(0),setCurrentCellYCoordinate(0)},areAnyCellsCurrentlyFocused=function areAnyCellsCurrentlyFocused(){return null!==currentCellXCoordinate&&null!==currentCellYCoordinate};return Object(jsx_runtime.jsxs)("table",{tabIndex:"0","aria-label":"Table grid. Navigate cells using the arrow keys.",role:"grid",ref:tableGridRef,onKeyDown:function handleGridKeyDown(e){switch(e.persist(),e.key){case"ArrowUp":handleArrowUp(e);break;case"ArrowDown":handleArrowDown(e);break;case"ArrowLeft":handleArrowLeft(e);break;case"ArrowRight":handleArrowRight(e);break;case"Home":handleHome(e);break;case"End":handleEnd(e)}},onFocus:function handleGridFocus(e){e.target===tableGridRef.current&&(setCurrentCellXCoordinate(null),setCurrentCellYCoordinate(null))},children:[Object(jsx_runtime.jsx)("thead",{children:Object(jsx_runtime.jsx)("tr",{children:tableHeaders.map((function(tableHeader){return Object(jsx_runtime.jsx)("th",{scope:"col",children:tableHeader},tableHeader)}))})}),Object(jsx_runtime.jsx)("tbody",{children:tableData.map((function(tableRow,rowIndex){return Object(jsx_runtime.jsx)("tr",{children:Object.values(tableRow).map((function(tableCellData,columnIndex){var isCurrentFocusedCell=rowIndex===currentCellYCoordinate&&columnIndex===currentCellXCoordinate;return Object(jsx_runtime.jsx)(widgetTypes_TableCell_TableCell,{tableCellData:tableCellData,isCurrentFocusedCell:isCurrentFocusedCell,setIsCurrentFocusedCell:function setIsCurrentFocusedCell(){setCurrentCellXCoordinate(columnIndex),setCurrentCellYCoordinate(rowIndex)}},"".concat(columnIndex,"-").concat(rowIndex,"-").concat(tableCellData.widgetType,"-").concat(tableCellData.value))}))},tableRow.id.value)}))})]})};TableGrid_TableGrid.__docgenInfo={description:"",methods:[],displayName:"TableGrid"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tableGrid/TableGrid.js"]={name:"TableGrid",docgenInfo:TableGrid_TableGrid.__docgenInfo,path:"src/tableGrid/TableGrid.js"});__webpack_exports__.default={title:"Read-Only Tables"};var _01ReadOnlyTable_stories_BasicTable=function _BasicTable(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Basic Table"}),Object(jsx_runtime.jsx)("p",{children:"This is a basic table. The table content is read-only, so none of the cells are tabbable, focusable, or interactive. The columns are not sortable, reorderable, or resizable. The table data is not filterable."}),Object(jsx_runtime.jsx)("p",{children:"Mouse users and keyboard users have nothing to interact with. Screen reader users can navigate using normal table navigation commands."}),Object(jsx_runtime.jsx)(BasicTable_BasicTable,{tableData:basicPokemonData.a})]})},_01ReadOnlyTable_stories_TableWithWidgetTypes=function _TableWithWidgetTypes(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Table with Various Widget Types"}),Object(jsx_runtime.jsx)("p",{children:"This is a table capable of rendering various widget types in the table cells. This table features checkboxes, text, and links. The checkbox and link elements are naturally tabbable, focusable, and interactive."}),Object(jsx_runtime.jsx)("p",{children:"The columns are not sortable, reorderable, or resizable. The table data is not filterable."}),Object(jsx_runtime.jsx)("p",{children:"Mouse users can click to check and uncheck the checkboxes. Mouse users can click on the links to visit them."}),Object(jsx_runtime.jsx)("p",{children:"Keyboard users can tab to the checkboxes and links and interact with them through normal keyboard commands (Space to check/uncheck the checkboxes and Enter to visit a link)."}),Object(jsx_runtime.jsx)("p",{children:"Screen reader users can navigate using normal table navigation commands and can also interact with the checkboxes and links using normal screen reader commands."}),Object(jsx_runtime.jsx)(TableWithWidgetTypes_TableWithWidgetTypes,{tableData:pokemonDataWithWidgetTypes.a})]})},_01ReadOnlyTable_stories_TableGrid=function _TableGrid(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Table Grid"}),Object(jsx_runtime.jsx)("p",{children:"This is a table grid capable of rendering various widget types in the table cells. This table features checkboxes, text, and links. The checkbox and link elements are naturally tabbable, focusable, and interactive. But, since this table is rendered as a grid, we'll override the normal table navigation to allow the user to instead navigate using the arrow keys."}),Object(jsx_runtime.jsx)("p",{children:"The columns are not sortable, reorderable, or resizable. The table data is not filterable."}),Object(jsx_runtime.jsx)("p",{children:"Mouse users can click to check and uncheck the checkboxes. Mouse users can click on the links to visit them."}),Object(jsx_runtime.jsx)("p",{children:"Keyboard users can tab to the grid itself, which is a single tab stop. After that, keyboard users can navigate the grid using the arrow keys to move between table cells."}),Object(jsx_runtime.jsx)("p",{children:"Each table cell is tabbable/focusable regardless of whether or not the cell contains interactive content. This is important so as to not block keyboard users from navigating to certain cells."}),Object(jsx_runtime.jsx)("p",{children:"Whether the focus goes to the cell itself or to the widget within the cell depends on the type of widget. For interactive widgets like links, buttons, or checkboxes that require no keyboard arrow keys to operate, focus is sent directly to the widget. For static widgets like plain text or for interactive widgets that require keyboard arrow keys to operate, like a text input or a listbox, focus is sent to the table cell."}),Object(jsx_runtime.jsx)("p",{children:"When focusing on an interactive cell, keyboard users can interact with the checkboxes and links through normal keyboard commands (Space to check/uncheck the checkboxes and Enter to visit a link)."}),Object(jsx_runtime.jsx)("p",{children:"Screen reader users can navigate using normal table navigation commands and can also interact with the checkboxes and links using normal screen reader commands."}),Object(jsx_runtime.jsx)(TableGrid_TableGrid,{tableData:pokemonDataWithWidgetTypes.a})]})};_01ReadOnlyTable_stories_BasicTable.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Basic Table</h1>\n    <p>\n      This is a basic table. The table content is read-only, so none of the\n      cells are tabbable, focusable, or interactive. The columns are not\n      sortable, reorderable, or resizable. The table data is not filterable.\n    </p>\n    <p>\n      Mouse users and keyboard users have nothing to interact with. Screen\n      reader users can navigate using normal table navigation commands.\n    </p>\n    <BasicTable tableData={basicPokemonData} />\n  </>\n)"}},_01ReadOnlyTable_stories_BasicTable.parameters),_01ReadOnlyTable_stories_TableWithWidgetTypes.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Table with Various Widget Types</h1>\n    <p>\n      This is a table capable of rendering various widget types in the table\n      cells. This table features checkboxes, text, and links. The checkbox and\n      link elements are naturally tabbable, focusable, and interactive.\n    </p>\n    <p>\n      The columns are not sortable, reorderable, or resizable. The table data is\n      not filterable.\n    </p>\n    <p>\n      Mouse users can click to check and uncheck the checkboxes. Mouse users can\n      click on the links to visit them.\n    </p>\n    <p>\n      Keyboard users can tab to the checkboxes and links and interact with them\n      through normal keyboard commands (Space to check/uncheck the checkboxes\n      and Enter to visit a link).\n    </p>\n    <p>\n      Screen reader users can navigate using normal table navigation commands\n      and can also interact with the checkboxes and links using normal screen\n      reader commands.\n    </p>\n    <TableWithWidgetTypes tableData={pokemonDataWithWidgetTypes} />\n  </>\n)"}},_01ReadOnlyTable_stories_TableWithWidgetTypes.parameters),_01ReadOnlyTable_stories_TableGrid.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Table Grid</h1>\n    <p>\n      This is a table grid capable of rendering various widget types in the\n      table cells. This table features checkboxes, text, and links. The checkbox\n      and link elements are naturally tabbable, focusable, and interactive. But,\n      since this table is rendered as a grid, we'll override the normal table\n      navigation to allow the user to instead navigate using the arrow keys.\n    </p>\n    <p>\n      The columns are not sortable, reorderable, or resizable. The table data is\n      not filterable.\n    </p>\n    <p>\n      Mouse users can click to check and uncheck the checkboxes. Mouse users can\n      click on the links to visit them.\n    </p>\n    <p>\n      Keyboard users can tab to the grid itself, which is a single tab stop.\n      After that, keyboard users can navigate the grid using the arrow keys to\n      move between table cells.\n    </p>\n    <p>\n      Each table cell is tabbable/focusable regardless of whether or not the\n      cell contains interactive content. This is important so as to not block\n      keyboard users from navigating to certain cells.\n    </p>\n    <p>\n      Whether the focus goes to the cell itself or to the widget within the cell\n      depends on the type of widget. For interactive widgets like links,\n      buttons, or checkboxes that require no keyboard arrow keys to operate,\n      focus is sent directly to the widget. For static widgets like plain text\n      or for interactive widgets that require keyboard arrow keys to operate,\n      like a text input or a listbox, focus is sent to the table cell.\n    </p>\n    <p>\n      When focusing on an interactive cell, keyboard users can interact with the\n      checkboxes and links through normal keyboard commands (Space to\n      check/uncheck the checkboxes and Enter to visit a link).\n    </p>\n    <p>\n      Screen reader users can navigate using normal table navigation commands\n      and can also interact with the checkboxes and links using normal screen\n      reader commands.\n    </p>\n    <TableGrid tableData={pokemonDataWithWidgetTypes} />\n  </>\n)"}},_01ReadOnlyTable_stories_TableGrid.parameters),_01ReadOnlyTable_stories_BasicTable.__docgenInfo={description:"",methods:[],displayName:"_BasicTable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/01ReadOnlyTable.stories.js"]={name:"_BasicTable",docgenInfo:_01ReadOnlyTable_stories_BasicTable.__docgenInfo,path:"src/01ReadOnlyTable.stories.js"}),_01ReadOnlyTable_stories_TableWithWidgetTypes.__docgenInfo={description:"",methods:[],displayName:"_TableWithWidgetTypes"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/01ReadOnlyTable.stories.js"]={name:"_TableWithWidgetTypes",docgenInfo:_01ReadOnlyTable_stories_TableWithWidgetTypes.__docgenInfo,path:"src/01ReadOnlyTable.stories.js"}),_01ReadOnlyTable_stories_TableGrid.__docgenInfo={description:"",methods:[],displayName:"_TableGrid"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/01ReadOnlyTable.stories.js"]={name:"_TableGrid",docgenInfo:_01ReadOnlyTable_stories_TableGrid.__docgenInfo,path:"src/01ReadOnlyTable.stories.js"})},"./src/02EditableTable.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"_BasicEditableTable",(function(){return _02EditableTable_stories_BasicEditableTable})),__webpack_require__.d(__webpack_exports__,"_EditableTableWithWidgetTypes",(function(){return _02EditableTable_stories_EditableTableWithWidgetTypes})),__webpack_require__.d(__webpack_exports__,"_EditableTableGrid",(function(){return _02EditableTable_stories_EditableTableGrid}));var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),basicPokemonData=__webpack_require__("./src/fixtures/basicPokemonData.js"),pokemonDataWithWidgetTypes=__webpack_require__("./src/fixtures/pokemonDataWithWidgetTypes.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),toConsumableArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),jsx_runtime=(__webpack_require__("./src/basicEditableTable/EditableTableCell.css"),__webpack_require__("./node_modules/react/jsx-runtime.js")),EditableTableCell_EditableTableCell=function EditableTableCell(_ref){var rowIndex=_ref.rowIndex,columnIndex=_ref.columnIndex,numberOfRows=_ref.numberOfRows,numberOfColumns=_ref.numberOfColumns,headerKey=_ref.headerKey,currentEditingRow=_ref.currentEditingRow,setCurrentEditingRow=_ref.setCurrentEditingRow,currentEditingColumn=_ref.currentEditingColumn,setCurrentEditingColumn=_ref.setCurrentEditingColumn,currentTableData=_ref.currentTableData,setCurrentTableData=_ref.setCurrentTableData,tableCellData=_ref.tableCellData,tableCellRef=Object(react.useRef)(null),tableCellInputRef=Object(react.useRef)(null),_useState=Object(react.useState)(tableCellData),_useState2=Object(slicedToArray.a)(_useState,2),tableCellInputValue=_useState2[0],setTableCellInputValue=_useState2[1],_useState3=Object(react.useState)(!1),_useState4=Object(slicedToArray.a)(_useState3,2),needToSetFocusToTableCell=_useState4[0],setNeedToSetFocusToTableCell=_useState4[1],_useState5=Object(react.useState)(!1),_useState6=Object(slicedToArray.a)(_useState5,2),needToSetFocusToTableCellInput=_useState6[0],setNeedToSetFocusToTableCellInput=_useState6[1];Object(react.useEffect)((function(){var _tableCellRef$current;needToSetFocusToTableCell&&(null===(_tableCellRef$current=tableCellRef.current)||void 0===_tableCellRef$current||_tableCellRef$current.focus(),setNeedToSetFocusToTableCell(!1))}),[needToSetFocusToTableCell]),Object(react.useEffect)((function(){var _tableCellInputRef$cu;needToSetFocusToTableCellInput&&(null===(_tableCellInputRef$cu=tableCellInputRef.current)||void 0===_tableCellInputRef$cu||_tableCellInputRef$cu.focus(),setNeedToSetFocusToTableCellInput(!1))}),[needToSetFocusToTableCellInput]),Object(react.useEffect)((function(){var _tableCellInputRef$cu2;currentEditingRow===rowIndex&&currentEditingColumn===columnIndex&&(null===(_tableCellInputRef$cu2=tableCellInputRef.current)||void 0===_tableCellInputRef$cu2||_tableCellInputRef$cu2.focus())}),[currentEditingRow,currentEditingColumn,rowIndex,columnIndex]);var enterEditMode=function enterEditMode(e){setCurrentEditingRow(rowIndex),setCurrentEditingColumn(columnIndex),setNeedToSetFocusToTableCellInput(!0)},handleTabOnInputKeyPress=function handleTabOnInputKeyPress(e){updateCellData(),isCellBottomRightInTable()&&!e.shiftKey||isCellTopLeftInTable()&&e.shiftKey?leaveEditMode():(e.preventDefault(),e.shiftKey?handleMovingFocusWithShiftTab():handleMovingFocusWithTab())},handleMovingFocusWithShiftTab=function handleMovingFocusWithShiftTab(){var previousColumn=columnIndex-1;previousColumn>=0?setCurrentEditingColumn(previousColumn):(setCurrentEditingColumn(numberOfColumns-1),setCurrentEditingRow(currentEditingRow-1))},handleMovingFocusWithTab=function handleMovingFocusWithTab(){var nextColumn=columnIndex+1;nextColumn<=numberOfColumns-1?setCurrentEditingColumn(nextColumn):(setCurrentEditingColumn(0),setCurrentEditingRow(currentEditingRow+1))},handleEnterOnInputKeyPress=function handleEnterOnInputKeyPress(e){if(updateCellData(),e.shiftKey){var previousRow=rowIndex-1;setCurrentEditingRow(previousRow>=0?previousRow:null)}else{var nextRow=rowIndex+1;setCurrentEditingRow(nextRow<=numberOfRows-1?nextRow:null)}},handleEscapeOnInputKeyPress=function handleEscapeOnInputKeyPress(){discardCellDataChanges(),leaveEditMode(),setNeedToSetFocusToTableCell(!0)},isCellBottomRightInTable=function isCellBottomRightInTable(){return rowIndex===numberOfRows-1&&columnIndex===numberOfColumns-1},isCellTopLeftInTable=function isCellTopLeftInTable(){return 0===rowIndex&&0===columnIndex},updateCellData=function updateCellData(){var updatedTableData=Object(toConsumableArray.a)(currentTableData);(updatedTableData=updatedTableData.map((function(tableRow){return Object(objectSpread2.a)({},tableRow)})))[rowIndex][headerKey]=tableCellInputValue,setCurrentTableData(updatedTableData)},discardCellDataChanges=function discardCellDataChanges(){setTableCellInputValue(tableCellData)},leaveEditMode=function leaveEditMode(){setCurrentEditingRow(null),setCurrentEditingColumn(null)};return currentEditingRow===rowIndex?Object(jsx_runtime.jsx)("td",{children:Object(jsx_runtime.jsx)("input",{type:"text",value:tableCellInputValue,onKeyDown:function handleTableCellInputKeyDown(e){switch(e.persist(),e.key){case"Tab":handleTabOnInputKeyPress(e);break;case"Enter":handleEnterOnInputKeyPress(e);break;case"Escape":case"Esc":handleEscapeOnInputKeyPress()}},onChange:function handleTableCellInputChange(e){setTableCellInputValue(e.target.value)},ref:tableCellInputRef,className:"textInput"})}):Object(jsx_runtime.jsx)("td",{className:"tableCellThatContainsViewModeButton",children:Object(jsx_runtime.jsx)("button",{className:"tableCellViewModeButton",onKeyPress:function handleTableCellKeyPress(e){"Enter"===e.key&&enterEditMode()},onDoubleClick:enterEditMode,ref:tableCellRef,"aria-label":"".concat(tableCellData," - Press Enter to edit"),children:tableCellData})})};EditableTableCell_EditableTableCell.__docgenInfo={description:"",methods:[],displayName:"EditableTableCell"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/basicEditableTable/EditableTableCell.js"]={name:"EditableTableCell",docgenInfo:EditableTableCell_EditableTableCell.__docgenInfo,path:"src/basicEditableTable/EditableTableCell.js"});__webpack_require__("./src/Table.css");var BasicEditableTable_BasicEditableTable=function BasicEditableTable(_ref){var tableData=_ref.tableData,tableHeaders=Object.keys(tableData[0]),numberOfColumns=tableHeaders.length,numberOfRows=tableData.length,_useState=Object(react.useState)(tableData),_useState2=Object(slicedToArray.a)(_useState,2),currentTableData=_useState2[0],setCurrentTableData=_useState2[1],_useState3=Object(react.useState)(null),_useState4=Object(slicedToArray.a)(_useState3,2),currentEditingRow=_useState4[0],setCurrentEditingRow=_useState4[1],_useState5=Object(react.useState)(null),_useState6=Object(slicedToArray.a)(_useState5,2),currentEditingColumn=_useState6[0],setCurrentEditingColumn=_useState6[1],tableRef=Object(react.useRef)(null);return Object(react.useEffect)((function(){var handleOutsideClick=function handleOutsideClick(e){tableRef.current&&!tableRef.current.contains(e.target)&&null!==currentEditingRow&&(setCurrentEditingRow(null),setCurrentEditingColumn(null))};return document.addEventListener("click",handleOutsideClick),function(){document.removeEventListener("click",handleOutsideClick)}}),[currentEditingRow]),Object(jsx_runtime.jsxs)("table",{"aria-label":"Basic editable table",ref:tableRef,children:[Object(jsx_runtime.jsx)("thead",{children:Object(jsx_runtime.jsx)("tr",{children:tableHeaders.map((function(tableHeader){return Object(jsx_runtime.jsx)("th",{scope:"col",children:tableHeader},tableHeader)}))})}),Object(jsx_runtime.jsx)("tbody",{children:currentTableData.map((function(tableRow,rowIndex){return Object(jsx_runtime.jsx)("tr",{children:Object.values(tableRow).map((function(tableCellData,columnIndex){return Object(jsx_runtime.jsx)(EditableTableCell_EditableTableCell,{tableCellData:tableCellData,rowIndex:rowIndex,columnIndex:columnIndex,numberOfRows:numberOfRows,numberOfColumns:numberOfColumns,headerKey:Object.keys(tableRow)[columnIndex],currentEditingRow:currentEditingRow,setCurrentEditingRow:setCurrentEditingRow,currentEditingColumn:currentEditingColumn,setCurrentEditingColumn:setCurrentEditingColumn,currentTableData:currentTableData,setCurrentTableData:setCurrentTableData},"".concat(columnIndex,"-").concat(rowIndex,"-").concat(tableCellData))}))},tableRow.id)}))})]})};BasicEditableTable_BasicEditableTable.__docgenInfo={description:"",methods:[],displayName:"BasicEditableTable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/basicEditableTable/BasicEditableTable.js"]={name:"BasicEditableTable",docgenInfo:BasicEditableTable_BasicEditableTable.__docgenInfo,path:"src/basicEditableTable/BasicEditableTable.js"});var TableCellCheckbox_TableCellCheckbox=function TableCellCheckbox(_ref){var tableCellData=_ref.tableCellData;return Object(jsx_runtime.jsx)("input",{type:"checkbox",checked:tableCellData.value,"aria-label":tableCellData["aria-label"]})};TableCellCheckbox_TableCellCheckbox.__docgenInfo={description:"",methods:[],displayName:"TableCellCheckbox"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/editableTableWithWidgetTypes/widgetTypes/TableCellCheckbox.js"]={name:"TableCellCheckbox",docgenInfo:TableCellCheckbox_TableCellCheckbox.__docgenInfo,path:"src/editableTableWithWidgetTypes/widgetTypes/TableCellCheckbox.js"});var TableCellLink_TableCellLink=function TableCellLink(_ref){var tableCellData=_ref.tableCellData;return Object(jsx_runtime.jsx)("a",{href:tableCellData.href,children:tableCellData.value})};TableCellLink_TableCellLink.__docgenInfo={description:"",methods:[],displayName:"TableCellLink"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/editableTableWithWidgetTypes/widgetTypes/TableCellLink.js"]={name:"TableCellLink",docgenInfo:TableCellLink_TableCellLink.__docgenInfo,path:"src/editableTableWithWidgetTypes/widgetTypes/TableCellLink.js"});var TableCellText=function TableCellText(_ref){return _ref.tableCellData.value},widgetTypes_EditableTableCell_EditableTableCell=(__webpack_require__("./src/editableTableWithWidgetTypes/widgetTypes/EditableTableCell.css"),function EditableTableCell(_ref){var rowIndex=_ref.rowIndex,columnIndex=_ref.columnIndex,numberOfRows=_ref.numberOfRows,numberOfColumns=_ref.numberOfColumns,headerKey=_ref.headerKey,currentEditingRow=_ref.currentEditingRow,setCurrentEditingRow=_ref.setCurrentEditingRow,currentEditingColumn=_ref.currentEditingColumn,setCurrentEditingColumn=_ref.setCurrentEditingColumn,currentTableData=_ref.currentTableData,setCurrentTableData=_ref.setCurrentTableData,tableCellData=_ref.tableCellData,tableCellRef=Object(react.useRef)(null),tableCellInputRef=Object(react.useRef)(null),_useState=Object(react.useState)(tableCellData.value),_useState2=Object(slicedToArray.a)(_useState,2),tableCellInputValue=_useState2[0],setTableCellInputValue=_useState2[1],_useState3=Object(react.useState)(!1),_useState4=Object(slicedToArray.a)(_useState3,2),needToSetFocusToTableCell=_useState4[0],setNeedToSetFocusToTableCell=_useState4[1],_useState5=Object(react.useState)(!1),_useState6=Object(slicedToArray.a)(_useState5,2),needToSetFocusToTableCellInput=_useState6[0],setNeedToSetFocusToTableCellInput=_useState6[1];Object(react.useEffect)((function(){var _tableCellRef$current;needToSetFocusToTableCell&&(null===(_tableCellRef$current=tableCellRef.current)||void 0===_tableCellRef$current||_tableCellRef$current.focus(),setNeedToSetFocusToTableCell(!1))}),[needToSetFocusToTableCell]),Object(react.useEffect)((function(){var _tableCellInputRef$cu;needToSetFocusToTableCellInput&&(null===(_tableCellInputRef$cu=tableCellInputRef.current)||void 0===_tableCellInputRef$cu||_tableCellInputRef$cu.focus(),setNeedToSetFocusToTableCellInput(!1))}),[needToSetFocusToTableCellInput]),Object(react.useEffect)((function(){var _tableCellInputRef$cu2;currentEditingRow===rowIndex&&currentEditingColumn===columnIndex&&(null===(_tableCellInputRef$cu2=tableCellInputRef.current)||void 0===_tableCellInputRef$cu2||_tableCellInputRef$cu2.focus())}),[currentEditingRow,currentEditingColumn,rowIndex,columnIndex]);var enterEditMode=function enterEditMode(e){setCurrentEditingRow(rowIndex),setCurrentEditingColumn(columnIndex),setNeedToSetFocusToTableCellInput(!0)},handleTabOnInputKeyPress=function handleTabOnInputKeyPress(e){updateCellData(),isCellBottomRightInTable()&&!e.shiftKey||isCellTopLeftInTable()&&e.shiftKey?leaveEditMode():(e.preventDefault(),e.shiftKey?handleMovingFocusWithShiftTab():handleMovingFocusWithTab())},handleMovingFocusWithShiftTab=function handleMovingFocusWithShiftTab(){var previousColumn=columnIndex-1;previousColumn>=0?setCurrentEditingColumn(previousColumn):(setCurrentEditingColumn(numberOfColumns-1),setCurrentEditingRow(currentEditingRow-1))},handleMovingFocusWithTab=function handleMovingFocusWithTab(){var nextColumn=columnIndex+1;nextColumn<=numberOfColumns-1?setCurrentEditingColumn(nextColumn):(setCurrentEditingColumn(0),setCurrentEditingRow(currentEditingRow+1))},handleEnterOnInputKeyPress=function handleEnterOnInputKeyPress(e){if(updateCellData(),e.shiftKey){var previousRow=rowIndex-1;setCurrentEditingRow(previousRow>=0?previousRow:null)}else{var nextRow=rowIndex+1;setCurrentEditingRow(nextRow<=numberOfRows-1?nextRow:null)}},handleEscapeOnInputKeyPress=function handleEscapeOnInputKeyPress(){discardCellDataChanges(),leaveEditMode(),setNeedToSetFocusToTableCell(!0)},isCellBottomRightInTable=function isCellBottomRightInTable(){return rowIndex===numberOfRows-1&&columnIndex===numberOfColumns-1},isCellTopLeftInTable=function isCellTopLeftInTable(){return 0===rowIndex&&0===columnIndex},updateCellData=function updateCellData(){var updatedTableData=Object(toConsumableArray.a)(currentTableData);(updatedTableData=updatedTableData.map((function(tableRow){return Object(objectSpread2.a)({},tableRow)})))[rowIndex][headerKey]=Object(objectSpread2.a)({},updatedTableData[rowIndex][headerKey]),updatedTableData[rowIndex][headerKey].value=tableCellInputValue,setCurrentTableData(updatedTableData)},discardCellDataChanges=function discardCellDataChanges(){setTableCellInputValue(tableCellData.value)},leaveEditMode=function leaveEditMode(){setCurrentEditingRow(null),setCurrentEditingColumn(null)};return currentEditingRow===rowIndex?Object(jsx_runtime.jsx)("td",{children:Object(jsx_runtime.jsx)("input",{type:"text",value:tableCellInputValue,onKeyDown:function handleTableCellInputKeyDown(e){switch(e.persist(),e.key){case"Tab":handleTabOnInputKeyPress(e);break;case"Enter":handleEnterOnInputKeyPress(e);break;case"Escape":case"Esc":handleEscapeOnInputKeyPress()}},onChange:function handleTableCellInputChange(e){setTableCellInputValue(e.target.value)},ref:tableCellInputRef,className:"textInput"})}):Object(jsx_runtime.jsx)("td",{className:"tableCellThatContainsViewModeButton",children:Object(jsx_runtime.jsx)("button",{className:"tableCellViewModeButton",onKeyPress:function handleTableCellKeyPress(e){"Enter"===e.key&&enterEditMode()},onDoubleClick:enterEditMode,ref:tableCellRef,"aria-label":"".concat(tableCellData.value," - Press Enter to edit"),children:function getTableCellWidget(widgetType){switch(widgetType){case"checkbox":return Object(jsx_runtime.jsx)(TableCellCheckbox_TableCellCheckbox,{tableCellData:tableCellData});case"link":return Object(jsx_runtime.jsx)(TableCellLink_TableCellLink,{tableCellData:tableCellData});default:return Object(jsx_runtime.jsx)(TableCellText,{tableCellData:tableCellData})}}(tableCellData.widgetType)})})});widgetTypes_EditableTableCell_EditableTableCell.__docgenInfo={description:"",methods:[],displayName:"EditableTableCell"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/editableTableWithWidgetTypes/widgetTypes/EditableTableCell.js"]={name:"EditableTableCell",docgenInfo:widgetTypes_EditableTableCell_EditableTableCell.__docgenInfo,path:"src/editableTableWithWidgetTypes/widgetTypes/EditableTableCell.js"});var EditableTableWithWidgetTypes_EditableTableWithWidgetTypes=function EditableTableWithWidgetTypes(_ref){var tableData=_ref.tableData,tableHeaders=Object.keys(tableData[0]),numberOfColumns=tableHeaders.length,numberOfRows=tableData.length,_useState=Object(react.useState)(tableData),_useState2=Object(slicedToArray.a)(_useState,2),currentTableData=_useState2[0],setCurrentTableData=_useState2[1],_useState3=Object(react.useState)(null),_useState4=Object(slicedToArray.a)(_useState3,2),currentEditingRow=_useState4[0],setCurrentEditingRow=_useState4[1],_useState5=Object(react.useState)(null),_useState6=Object(slicedToArray.a)(_useState5,2),currentEditingColumn=_useState6[0],setCurrentEditingColumn=_useState6[1],tableRef=Object(react.useRef)(null);return Object(react.useEffect)((function(){var handleOutsideClick=function handleOutsideClick(e){tableRef.current&&!tableRef.current.contains(e.target)&&null!==currentEditingRow&&(setCurrentEditingRow(null),setCurrentEditingColumn(null))};return document.addEventListener("click",handleOutsideClick),function(){document.removeEventListener("click",handleOutsideClick)}}),[currentEditingRow]),Object(jsx_runtime.jsxs)("table",{"aria-label":"Editable table with various widget types like checkboxes, text, and links",ref:tableRef,children:[Object(jsx_runtime.jsx)("thead",{children:Object(jsx_runtime.jsx)("tr",{children:tableHeaders.map((function(tableHeader){return Object(jsx_runtime.jsx)("th",{scope:"col",children:tableHeader},tableHeader)}))})}),Object(jsx_runtime.jsx)("tbody",{children:currentTableData.map((function(tableRow,rowIndex){return Object(jsx_runtime.jsx)("tr",{children:Object.values(tableRow).map((function(tableCellData,columnIndex){return Object(jsx_runtime.jsx)(widgetTypes_EditableTableCell_EditableTableCell,{tableCellData:tableCellData,rowIndex:rowIndex,columnIndex:columnIndex,numberOfRows:numberOfRows,numberOfColumns:numberOfColumns,headerKey:Object.keys(tableRow)[columnIndex],currentEditingRow:currentEditingRow,setCurrentEditingRow:setCurrentEditingRow,currentEditingColumn:currentEditingColumn,setCurrentEditingColumn:setCurrentEditingColumn,currentTableData:currentTableData,setCurrentTableData:setCurrentTableData},"".concat(columnIndex,"-").concat(rowIndex,"-").concat(tableCellData.widgetType,"-").concat(tableCellData.value))}))},tableRow.id.value)}))})]})};EditableTableWithWidgetTypes_EditableTableWithWidgetTypes.__docgenInfo={description:"",methods:[],displayName:"EditableTableWithWidgetTypes"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/editableTableWithWidgetTypes/EditableTableWithWidgetTypes.js"]={name:"EditableTableWithWidgetTypes",docgenInfo:EditableTableWithWidgetTypes_EditableTableWithWidgetTypes.__docgenInfo,path:"src/editableTableWithWidgetTypes/EditableTableWithWidgetTypes.js"});__webpack_exports__.default={title:"Editable Tables"};var _02EditableTable_stories_BasicEditableTable=function _BasicEditableTable(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Basic Editable Table"}),Object(jsx_runtime.jsx)("p",{children:"This is a basic editable table. The only content type included in the table is text. The columns are not sortable, reorderable, or resizable. The table data is not filterable."}),Object(jsx_runtime.jsx)("p",{children:"Because the table is editable, when it's in View Mode, each one of the cells is tabbable, focusable, and interactive."}),Object(jsx_runtime.jsx)("h2",{children:"Mouse Users"}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in View Mode"}),": Double click any cell to enter Edit Mode for that specific cell's row."]}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in Edit Mode"}),": Change any of the data (using the keyboard to type though, of course) and click outside of the table to leave Edit Mode and go back to View Mode."]}),Object(jsx_runtime.jsx)("h2",{children:"Keyboard Users"}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in View Mode"}),": Use the Tab key to navigate each cell and then press the Enter key on any cell to enter Edit Mode for that specific cell's row."]}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in Edit Mode"}),":"]}),Object(jsx_runtime.jsxs)("ul",{children:[Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("b",{children:"Tab"}),": Navigates right one cell and saves changes (if any). If you are on the last cell in a row, focus moves to the first cell in the next row. If you are on the last cell in the last row, focus moves outside of the table and exits Edit Mode."]}),Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("b",{children:"Shift+Tab"}),": Navigates left one cell and saves changes (if any). If you are on the first cell in a row, focus moves to the last cell in the previous row. If you are on the first cell in the first row, focus moves outside of the table and exits Edit Mode."]}),Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("b",{children:"Enter"}),": Navigates down one cell and saves changes (if any). If you are on a cell in the last row, focus moves outside of the table and exits Edit Mode."]}),Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("b",{children:"Shift+Enter"}),": Navigates up one cell and saves changes (if any). If you are on a cell in the first row, focus moves outside of the table and exits Edit Mode."]}),Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("b",{children:"Escape"}),": Exits Edit Mode and keeps focus on the current cell that previously had focus. Changes (if any) to the current cell are not saved."]})]}),Object(jsx_runtime.jsx)("h2",{children:"Screen Reader Users"}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in View Mode"}),": Navigate the table using normal table navigation commands. Enter Edit Mode by pressing the Enter key on any cell."]}),Object(jsx_runtime.jsxs)("p",{children:[Object(jsx_runtime.jsx)("b",{children:"When in Edit Mode"}),": Navigate the table using normal table navigation commands. Because screen reader navigation differs from normal keyboard navigation, navigating between rows while in Edit Mode does not change the currently focused cell or move the current editing row between rows. Screen reader users can exit Edit Mode by pressing the Escape key."]}),Object(jsx_runtime.jsx)(BasicEditableTable_BasicEditableTable,{tableData:basicPokemonData.a})]})},_02EditableTable_stories_EditableTableWithWidgetTypes=function _EditableTableWithWidgetTypes(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Editable Table with Widget Types"}),Object(jsx_runtime.jsx)("p",{children:Object(jsx_runtime.jsx)("b",{children:"WORK IN PROGRESS. TODO:"})}),Object(jsx_runtime.jsxs)("ul",{children:[Object(jsx_runtime.jsx)("li",{children:"Should the tab stops only have one per cell? Right now the checkbox cell and the link cell have two tab stops, one for the cell and one for the checkbox/link, but there should probably be just the one tab stop on the checkbox/link and not the cell. Or... maybe that would only be true when the table functions as a grid? Because if I want to visit one of the links, for example, then I would need to be able to tab to it when in View Mode, and we would need to differentiate a way between pressing a key to visit the link vs. pressing a key to enter Edit Mode."}),Object(jsx_runtime.jsx)("li",{children:"When in Edit Mode, the checkbox widget should not change. Right now it changes to a text input just like all the other widgets, but it should be unaffected and stay as a checkbox widget."}),Object(jsx_runtime.jsx)("li",{children:"Update tests once the above two issues are resolved."}),Object(jsx_runtime.jsx)("li",{children:"Pressing Escape anywhere on the table should exit Edit Mode. This is probably a bug in the Basic Editable Table too."})]}),Object(jsx_runtime.jsx)("p",{children:"This is a table capable of rendering various widget types in the table cells. This table features checkboxes, text, and links. The checkbox and link elements are naturally tabbable, focusable, and interactive."}),Object(jsx_runtime.jsx)("p",{children:"The columns are not sortable, reorderable, or resizable. The table data is not filterable."}),Object(jsx_runtime.jsx)("p",{children:"Because the table is editable, when it's in View Mode, each one of the cells is tabbable, focusable, and interactive."}),Object(jsx_runtime.jsx)("p",{children:"Mouse users can click to check and uncheck the checkboxes. Mouse users can click on the links to visit them."}),Object(jsx_runtime.jsx)("p",{children:"Keyboard users can tab to the checkboxes and links and interact with them through normal keyboard commands (Space to check/uncheck the checkboxes and Enter to visit a link)."}),Object(jsx_runtime.jsx)("p",{children:"Screen reader users can navigate using normal table navigation commands and can also interact with the checkboxes and links using normal screen reader commands."}),Object(jsx_runtime.jsx)(EditableTableWithWidgetTypes_EditableTableWithWidgetTypes,{tableData:pokemonDataWithWidgetTypes.a})]})},_02EditableTable_stories_EditableTableGrid=function _EditableTableGrid(){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)("h1",{children:"Editable Table Grid"}),Object(jsx_runtime.jsx)("p",{children:Object(jsx_runtime.jsx)("b",{children:"WORK IN PROGRESS. TODO:"})}),Object(jsx_runtime.jsx)("ul",{children:Object(jsx_runtime.jsx)("li",{children:"Create example"})})]})};_02EditableTable_stories_BasicEditableTable.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Basic Editable Table</h1>\n    <p>\n      This is a basic editable table. The only content type included in the\n      table is text. The columns are not sortable, reorderable, or resizable.\n      The table data is not filterable.\n    </p>\n    <p>\n      Because the table is editable, when it's in View Mode, each one of the\n      cells is tabbable, focusable, and interactive.\n    </p>\n    <h2>Mouse Users</h2>\n    <p>\n      <b>When in View Mode</b>: Double click any cell to enter Edit Mode for\n      that specific cell's row.\n    </p>\n    <p>\n      <b>When in Edit Mode</b>: Change any of the data (using the keyboard to\n      type though, of course) and click outside of the table to leave Edit Mode\n      and go back to View Mode.\n    </p>\n    <h2>Keyboard Users</h2>\n    <p>\n      <b>When in View Mode</b>: Use the Tab key to navigate each cell and then\n      press the Enter key on any cell to enter Edit Mode for that specific\n      cell's row.\n    </p>\n    <p>\n      <b>When in Edit Mode</b>:\n    </p>\n    <ul>\n      <li>\n        <b>Tab</b>: Navigates right one cell and saves changes (if any). If you\n        are on the last cell in a row, focus moves to the first cell in the next\n        row. If you are on the last cell in the last row, focus moves outside of\n        the table and exits Edit Mode.\n      </li>\n      <li>\n        <b>Shift+Tab</b>: Navigates left one cell and saves changes (if any). If\n        you are on the first cell in a row, focus moves to the last cell in the\n        previous row. If you are on the first cell in the first row, focus moves\n        outside of the table and exits Edit Mode.\n      </li>\n      <li>\n        <b>Enter</b>: Navigates down one cell and saves changes (if any). If you\n        are on a cell in the last row, focus moves outside of the table and\n        exits Edit Mode.\n      </li>\n      <li>\n        <b>Shift+Enter</b>: Navigates up one cell and saves changes (if any). If\n        you are on a cell in the first row, focus moves outside of the table and\n        exits Edit Mode.\n      </li>\n      <li>\n        <b>Escape</b>: Exits Edit Mode and keeps focus on the current cell that\n        previously had focus. Changes (if any) to the current cell are not\n        saved.\n      </li>\n    </ul>\n    <h2>Screen Reader Users</h2>\n    <p>\n      <b>When in View Mode</b>: Navigate the table using normal table navigation\n      commands. Enter Edit Mode by pressing the Enter key on any cell.\n    </p>\n    <p>\n      <b>When in Edit Mode</b>: Navigate the table using normal table navigation\n      commands. Because screen reader navigation differs from normal keyboard\n      navigation, navigating between rows while in Edit Mode does not change the\n      currently focused cell or move the current editing row between rows.\n      Screen reader users can exit Edit Mode by pressing the Escape key.\n    </p>\n    <BasicEditableTable tableData={basicPokemonData} />\n  </>\n)"}},_02EditableTable_stories_BasicEditableTable.parameters),_02EditableTable_stories_EditableTableWithWidgetTypes.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Editable Table with Widget Types</h1>\n    <p>\n      <b>WORK IN PROGRESS. TODO:</b>\n    </p>\n    <ul>\n      <li>\n        Should the tab stops only have one per cell? Right now the checkbox cell\n        and the link cell have two tab stops, one for the cell and one for the\n        checkbox/link, but there should probably be just the one tab stop on the\n        checkbox/link and not the cell. Or... maybe that would only be true when\n        the table functions as a grid? Because if I want to visit one of the\n        links, for example, then I would need to be able to tab to it when in\n        View Mode, and we would need to differentiate a way between pressing a\n        key to visit the link vs. pressing a key to enter Edit Mode.\n      </li>\n      <li>\n        When in Edit Mode, the checkbox widget should not change. Right now it\n        changes to a text input just like all the other widgets, but it should\n        be unaffected and stay as a checkbox widget.\n      </li>\n      <li>Update tests once the above two issues are resolved.</li>\n      <li>\n        Pressing Escape anywhere on the table should exit Edit Mode. This is\n        probably a bug in the Basic Editable Table too.\n      </li>\n    </ul>\n    <p>\n      This is a table capable of rendering various widget types in the table\n      cells. This table features checkboxes, text, and links. The checkbox and\n      link elements are naturally tabbable, focusable, and interactive.\n    </p>\n    <p>\n      The columns are not sortable, reorderable, or resizable. The table data is\n      not filterable.\n    </p>\n    <p>\n      Because the table is editable, when it's in View Mode, each one of the\n      cells is tabbable, focusable, and interactive.\n    </p>\n    <p>\n      Mouse users can click to check and uncheck the checkboxes. Mouse users can\n      click on the links to visit them.\n    </p>\n    <p>\n      Keyboard users can tab to the checkboxes and links and interact with them\n      through normal keyboard commands (Space to check/uncheck the checkboxes\n      and Enter to visit a link).\n    </p>\n    <p>\n      Screen reader users can navigate using normal table navigation commands\n      and can also interact with the checkboxes and links using normal screen\n      reader commands.\n    </p>\n    <EditableTableWithWidgetTypes tableData={pokemonDataWithWidgetTypes} />\n  </>\n)"}},_02EditableTable_stories_EditableTableWithWidgetTypes.parameters),_02EditableTable_stories_EditableTableGrid.parameters=Object(objectSpread2.a)({storySource:{source:"() => (\n  <>\n    <h1>Editable Table Grid</h1>\n    <p>\n      <b>WORK IN PROGRESS. TODO:</b>\n    </p>\n    <ul>\n      <li>Create example</li>\n    </ul>\n  </>\n)"}},_02EditableTable_stories_EditableTableGrid.parameters),_02EditableTable_stories_BasicEditableTable.__docgenInfo={description:"",methods:[],displayName:"_BasicEditableTable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/02EditableTable.stories.js"]={name:"_BasicEditableTable",docgenInfo:_02EditableTable_stories_BasicEditableTable.__docgenInfo,path:"src/02EditableTable.stories.js"}),_02EditableTable_stories_EditableTableWithWidgetTypes.__docgenInfo={description:"",methods:[],displayName:"_EditableTableWithWidgetTypes"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/02EditableTable.stories.js"]={name:"_EditableTableWithWidgetTypes",docgenInfo:_02EditableTable_stories_EditableTableWithWidgetTypes.__docgenInfo,path:"src/02EditableTable.stories.js"}),_02EditableTable_stories_EditableTableGrid.__docgenInfo={description:"",methods:[],displayName:"_EditableTableGrid"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/02EditableTable.stories.js"]={name:"_EditableTableGrid",docgenInfo:_02EditableTable_stories_EditableTableGrid.__docgenInfo,path:"src/02EditableTable.stories.js"})},"./src/Table.css":function(module,exports,__webpack_require__){},"./src/basicEditableTable/EditableTableCell.css":function(module,exports,__webpack_require__){},"./src/editableTableWithWidgetTypes/widgetTypes/EditableTableCell.css":function(module,exports,__webpack_require__){},"./src/fixtures/basicPokemonData.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return basicPokemonData}));var basicPokemonData=[{id:1,name:"Bulbasaur",type:"Grass",notes:"One of the three starter PokÃ©mon"},{id:2,name:"Ivysaur",type:"Grass",notes:"Evolves from Bulbasaur"},{id:3,name:"Venusaur",type:"Grass",notes:"Evolves from Ivysaur"},{id:4,name:"Charmander",type:"Fire",notes:"One of the three starter PokÃ©mon"},{id:5,name:"Charmeleon",type:"Fire",notes:"Evolves from Charmander"},{id:6,name:"Charizard",type:"Fire",notes:"Evolves from Charmeleon"},{id:7,name:"Squirtle",type:"Water",notes:"One of the three starter PokÃ©mon"},{id:8,name:"Wartortle",type:"Water",notes:"Evolves from Squirtle"},{id:9,name:"Blastoise",type:"Water",notes:"Evolves from Wartortle"}]},"./src/fixtures/pokemonDataWithWidgetTypes.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return pokemonDataWithWidgetTypes}));var pokemonDataWithWidgetTypes=[{select:{widgetType:"checkbox",value:"Select Row - Bulbasaur","aria-label":"Select Row - Bulbasaur"},id:{widgetType:"text",value:1},name:{widgetType:"link",value:"Bulbasaur",href:"https://www.pokemon.com/us/pokedex/bulbasaur"},type:{widgetType:"text",value:"Grass"},notes:{widgetType:"text",value:"One of the three starter PokÃ©mon"}},{select:{widgetType:"checkbox",value:"Select Row - Ivysaur","aria-label":"Select Row - Ivysaur"},id:{widgetType:"text",value:2},name:{widgetType:"link",value:"Ivysaur",href:"https://www.pokemon.com/us/pokedex/ivysaur"},type:{widgetType:"text",value:"Grass"},notes:{widgetType:"text",value:"Evolves from Bulbasaur"}},{select:{widgetType:"checkbox",value:"Select Row - Venusaur","aria-label":"Select Row - Venusaur"},id:{widgetType:"text",value:3},name:{widgetType:"link",value:"Venusaur",href:"https://www.pokemon.com/us/pokedex/venusaur"},type:{widgetType:"text",value:"Grass"},notes:{widgetType:"text",value:"Evolves from Ivysaur"}},{select:{widgetType:"checkbox",value:"Select Row - Charmander","aria-label":"Select Row - Charmander"},id:{widgetType:"text",value:4},name:{widgetType:"link",value:"Charmander",href:"https://www.pokemon.com/us/pokedex/charmander"},type:{widgetType:"text",value:"Fire"},notes:{widgetType:"text",value:"One of the three starter PokÃ©mon"}},{select:{widgetType:"checkbox",value:"Select Row - Charmeleon","aria-label":"Select Row - Charmeleon"},id:{widgetType:"text",value:5},name:{widgetType:"link",value:"Charmeleon",href:"https://www.pokemon.com/us/pokedex/charmeleon"},type:{widgetType:"text",value:"Fire"},notes:{widgetType:"text",value:"Evolves from Charmander"}},{select:{widgetType:"checkbox",value:"Select Row - Charizard","aria-label":"Select Row - Charizard"},id:{widgetType:"text",value:6},name:{widgetType:"link",value:"Charizard",href:"https://www.pokemon.com/us/pokedex/charizard"},type:{widgetType:"text",value:"Fire"},notes:{widgetType:"text",value:"Evolves from Charmeleon"}},{select:{widgetType:"checkbox",value:"Select Row - Squirtle","aria-label":"Select Row - Squirtle"},id:{widgetType:"text",value:7},name:{widgetType:"link",value:"Squirtle",href:"https://www.pokemon.com/us/pokedex/squirtle"},type:{widgetType:"text",value:"Water"},notes:{widgetType:"text",value:"One of the three starter PokÃ©mon"}},{select:{widgetType:"checkbox",value:"Select Row - Wartortle","aria-label":"Select Row - Wartortle"},id:{widgetType:"text",value:8},name:{widgetType:"link",value:"Wartortle",href:"https://www.pokemon.com/us/pokedex/wartortle"},type:{widgetType:"text",value:"Water"},notes:{widgetType:"text",value:"Evolves from Squirtle"}},{select:{widgetType:"checkbox",value:"Select Row - Blastoise","aria-label":"Select Row - Blastoise"},id:{widgetType:"text",value:9},name:{widgetType:"link",value:"Blastoise",href:"https://www.pokemon.com/us/pokedex/blastoise"},type:{widgetType:"text",value:"Water"},notes:{widgetType:"text",value:"Evolves from Wartortle"}}]},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);